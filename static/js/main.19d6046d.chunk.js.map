{"version":3,"sources":["components/App/App.messages.ts","components/Filter/Filter.utils.ts","components/Filter/Filter.actions.ts","components/Filter/Filter.hooks.ts","components/Gallery/Gallery.utils.ts","components/Pencil/Pencil.utils.ts","components/Pencil/Pancil.hooks.ts","components/Taxonomy/Taxonomy.hooks.ts","components/Filter/Filter.messages.ts","components/Filter/Globe/Globe.tsx","components/Filter/Filter.tsx","components/Loader/Loader.tsx","components/Pencil/Pencil.actions.ts","modules/requestStatus.ts","components/Pencil/Pencil.tsx","appConfig.ts","modules/api.ts","components/Pencil/Pencil.api.ts","components/Pencil/Pencil.epic.ts","components/Gallery/Grid/Grid.tsx","components/Gallery/Gallery.tsx","components/Map/Map.utils.ts","components/Map/Map.tsx","components/PencilInfo/Info/Info.tsx","components/PencilInfo/Info/Info.utils.ts","components/PencilInfo/PencilInfo.tsx","components/PencilInfo/TagHeader/TagHeader.messages.ts","components/PencilInfo/TagHeader/TagHeader.tsx","components/Taxonomy/Taxonomy.actions.ts","components/Taxonomy/Taxonomy.tsx","components/Taxonomy/Taxonomy.epic.ts","components/Taxonomy/Taxonomy.api.ts","components/App/App.tsx","epics.ts","store.ts","index.tsx"],"names":["appMessages","defineMessages","pencil","defaultMessage","id","country","mapFilterToQueryString","filter","query","qs","stringify","pickBy","Boolean","mapQueryStringToFilter","querystring","arguments","length","undefined","window","location","search","input","parse","ignoreQueryPrefix","Object","objectSpread","display","tag","initialState","updateFilter","createStandardAction","createReducer","handleAction","state","_ref","payload","useFilter","useSelector","store","dispatch","useDispatch","update","requestFirstPage","page","mapRequestToCacheId","request","cahceIdParts","concat","_request$query","push","join","usePencil","pencils","usePencilCache","cache","useCached","userQuery","_useFilter","currentFilter","slicedToArray","queryCacheId","mapQueryToCacheId","useTaxonomy","taxonomy","useCountries","countries","title","current","Globe","animated","isAnimated","frames","_useState","useState","_useState2","index","setIndex","useEffect","spin","setTimeout","clearTimeout","react_default","a","createElement","Fragment","injectIntl","withRouter","history","intl","_useTaxonomy","pencilCount","_useFilter2","setFilter","cached","isCountryFiltered","select","useRef","listen","_ref2","action","className","onClick","focus","Filter_Globe_Globe","index_es","assign","messages","values","count","ref","value","onChange","e","target","key","map","isCurrent","name","flag","formatMessage","pages","Loader","requestStatus","idle","pending","fulfilled","rejected","normalized","requestSinglePencil","createAsyncAction","requestPencilList","failure","success","_getCacheAndNormilize","_ref3","cacheId","data","ids","_ref4","reduce","list","defineProperty","getCacheAndNormilizedFromList","Pencil","queries","children","acc","toConsumableArray","total","nextUrl","items","Error","getPencilsFromCacheByQuery","isNotCached","isUndefined","forEach","apiUrl","process","appConfig","apiRequest","path","fetch","then","response","json","catch","error","console","apiRequestPencilList","pathParts","sanitize","encodeURIComponent","toLowerCase","replace","mapPencilListQueryRequestUrl","combineEpics","action$","pipe","ofType","getType","bufferTime","actions","mergeMap","from","uniqBy","isActionOf","mapPencilsingleQueryRequestUrl","catchError","of","mergeAll","Grid","thumbSize","preview","fullSize","photos","useSize","grid","href","preventDefault","classNames","size2","size3","srcSet","alt","src","Gallery","setQueries","lastQuery","nextPageNumber","onScroll","throttle","scrollBottomLine","pageYOffset","innerHeight","document","body","clientHeight","nextpage","addEventListener","removeEventListener","components_Pencil_Pencil","Gallery_Grid_Grid","components_Loader_Loader","baseStyle","stroke","strokeWidth","outline","red","mapGeoIdToStyle","hasPencil","isSelected","default","fill","hover","cursor","pressed","Map","geoIds","normalizedIds","normalizedNames","onCountryClick","geoId","react_simple_maps_lib","height","projectionConfig","yOffset","geography","disableOptimization","geographies","projection","geo","includes","style","Info","handlePseudoLink","useCallback","stopPropagation","targetElement","tagName","link","getAttribute","filterFromLink","queryPart","split","emptyFilter","filterKeys","keys","keysFromQuery","pick","isEmpty","getFilterFromLink","city","dangerouslySetInnerHTML","__html","content","tags","PencilInfo","closePencilInfo","PencilInfo_Info_Info","TagHeader","requestTaxonomy","meta","Taxonomy","addLocaleData","ru","App","components_Taxonomy_Taxonomy","_ref$requestStatus","reload","locale","defaultLocale","textComponent","react_router_dom","components_PencilInfo_PencilInfo","components_Filter_Filter","PencilInfo_TagHeader_TagHeader","components_Map_Map","components_Gallery_Gallery","rootEpic","taxonomyEpic","pencilEpic","epicMiddleware","createEpicMiddleware","rootReducer","combineReducers","taxonomyReducer","pencilReducer","filterReducer","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.19d6046d.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl'\n\nexport const appMessages = defineMessages({\n  pencil: {\n    defaultMessage: `{count, plural,\n      one {# карандаш}\n      few {# карандаша}\n      many {# карандашей}\n    }`,\n    id: 'App.pencil',\n  },\n\n  country: {\n    defaultMessage: `{count, plural,\n      one {# страны}\n      few {# стран}\n      many {# стран}\n    }`,\n    id: 'App.country',\n  },\n})\n","import { pickBy } from 'lodash'\nimport qs from 'qs'\nimport { Filter } from './Filter.interface'\n\nexport const getEmptyFilter = (): Filter => ({\n  display: '',\n  country: '',\n  tag: '',\n})\n\nexport const mapFilterToQueryString = (filter: Filter): string => {\n  const query = qs.stringify(pickBy(filter, Boolean))\n  return query ? '?' + query : ''\n}\n\nexport const mapQueryStringToFilter = (querystring = window.location.search): Filter => {\n  const input = qs.parse(querystring, { ignoreQueryPrefix: true })\n  return { ...getEmptyFilter(), ...input }\n}\n\nexport const getInitialFilter = (): Filter => ({\n  ...getEmptyFilter(),\n  ...mapQueryStringToFilter(),\n})\n","import { ActionType, createReducer, createStandardAction } from 'typesafe-actions'\nimport { Filter, FilterAppStore } from './Filter.interface'\nimport { getInitialFilter } from './Filter.utils'\n\nconst initialState: FilterAppStore = getInitialFilter()\nexport const updateFilter = createStandardAction('filter:set')<Partial<Filter>>()\nconst actions = { updateFilter }\ntype Actions = ActionType<typeof actions>\n\nexport default createReducer<FilterAppStore, Actions>(initialState).handleAction(\n  updateFilter,\n  (state, { payload }) => ({\n    ...state,\n    ...payload,\n  }),\n)\n","import { useDispatch, useSelector } from 'react-redux'\nimport { AppStore } from './../../store'\nimport { updateFilter } from './Filter.actions'\nimport { Filter } from './Filter.interface'\n\nexport const useFilter = (): [Filter, (update: Partial<Filter>) => void] => {\n  const filter = useSelector<AppStore, Filter>(store => store.filter)\n  const dispatch = useDispatch()\n  const setFilter = (update: Partial<Filter>) => dispatch(updateFilter(update))\n\n  return [filter, setFilter]\n}\n","import { PencilQuery } from '../Pencil/Pencil.interface'\nexport const requestFirstPage = (query: PencilQuery): PencilQuery => ({ ...query, page: 1 })\n","import {\n  Pencil,\n  PencilCache,\n  PencilCacheItem,\n  PencilListResponse,\n  PencilPages,\n  PencilQuery,\n  PencilRequest,\n  PencilSingleRequest,\n  PencilsNormalized,\n} from './Pencil.interface'\n\nexport const getEmptyPencilCacheItem = (): PencilCacheItem => ({\n  ids: [],\n  pages: {\n    page: 0,\n    total: 0,\n    nextUrl: null,\n    items: 0,\n    pencils: 0,\n  },\n})\n\nexport const mapPencilsingleQueryRequestUrl = ({ id }: PencilSingleRequest): string => {\n  return `/pencil/${id}/`\n}\n\nexport const mapPencilListQueryRequestUrl = ({ page, tag, country }: PencilQuery): string => {\n  const pathParts: string[] = []\n  const sanitize = (input: string) => {\n    return encodeURIComponent(input.toLowerCase().replace(/\\s/g, '-'))\n  }\n\n  if (tag && country) {\n    throw new Error('no tag and country at the same time')\n  }\n\n  if (tag) {\n    pathParts.push(`/tags/${sanitize(tag)}`)\n  }\n  if (country) {\n    pathParts.push(`/countries/${sanitize(country)}`)\n  }\n  if (page && page !== 1) {\n    pathParts.push(`/page/${page}`)\n  }\n  return pathParts.join('/') + '/'\n}\n\nexport const mapRequestToCacheId = (request: PencilRequest): string => {\n  const cahceIdParts: string[] = ['_']\n  if (request.id) {\n    return `id:${request.id}`\n  } else if (request.query) {\n    const { page, tag, country } = request.query\n    if (page) {\n      cahceIdParts.push(`p:${page}`)\n    }\n    if (tag) {\n      cahceIdParts.push(`t:${tag}`)\n    }\n    if (country) {\n      cahceIdParts.push(`c:${country}`)\n    }\n  }\n\n  return cahceIdParts.join('|')\n}\n\nexport const mapQueriesToCacheId = (queries: PencilQuery[]): string =>\n  queries.map(query => mapRequestToCacheId({ query })).join('+')\n\ninterface CacheAndNormalize {\n  cache: PencilCache\n  normalized: PencilsNormalized\n}\nexport const getCacheAndNormilizedFromList = ({\n  cacheId,\n  pages,\n  data,\n}: PencilListResponse): CacheAndNormalize => {\n  const ids = data.map(({ id }) => id)\n  const normalized = data.reduce((list, pencil) => ({ ...list, [pencil.id]: pencil }), {})\n  return { normalized, cache: { [cacheId]: { ids, pages } } }\n}\n\nexport const getNextPageNumberFromPages = (pages: PencilPages): number | null => {\n  if (pages) {\n    if (pages.page < pages.total) {\n      return pages.page + 1\n    }\n  }\n\n  return null\n}\n\nexport const getPencilsFromCacheByQuery = (\n  query: PencilQuery,\n  cache: Partial<PencilCache>,\n  normalized: PencilsNormalized,\n): Pencil[] => {\n  const pencilCache: PencilCacheItem =\n    cache[mapRequestToCacheId({ query })] || getEmptyPencilCacheItem()\n  const pencils = pencilCache.ids.map(id => {\n    const data = normalized[id]\n    if (!data) {\n      throw new Error('no cache for id ' + id)\n    }\n    return data\n  })\n\n  return pencils\n}\n","import { useSelector } from 'react-redux'\nimport { AppStore } from '../../store'\nimport { useFilter } from '../Filter/Filter.hooks'\nimport { requestFirstPage } from '../Gallery/Gallery.utils'\nimport { PencilAppStore, PencilQuery } from './Pencil.interface'\nimport { mapRequestToCacheId as mapQueryToCacheId } from './Pencil.utils'\n\nconst usePencil = () => useSelector<AppStore, PencilAppStore>(store => store.pencils)\n\nexport const usePecnilRequestStatus = () => usePencil().requestStatus\nexport const useNormalizedPencils = () => usePencil().normalized\nexport const usePencilCache = () => usePencil().cache\n\nexport const useCached = (userQuery?: PencilQuery) => {\n  const [currentFilter] = useFilter()\n  const filter = userQuery || currentFilter\n  const query = filter && filter.page && filter.page > 1 ? filter : requestFirstPage(filter)\n  const queryCacheId = mapQueryToCacheId({ query })\n  const cache = usePencilCache()\n  const cacheItem = cache[queryCacheId]\n  return cacheItem\n}\n","import { useSelector } from 'react-redux'\nimport { AppStore } from '../../store'\nimport { TaxonomyAppStore } from './Taxonomy.interface'\n\nexport const useTaxonomy = () => useSelector<AppStore, TaxonomyAppStore>(store => store.taxonomy)\nexport const useTaxonomyRequestStatus = () => useTaxonomy().requestStatus\nexport const useCountries = () => useTaxonomy().countries\n\nexport const useCountriesNormalizedByGeoId = () =>\n  useCountries().reduce<Record<string, string>>(\n    (normalized, country) => ({\n      ...normalized,\n      [country.id]: country.name,\n    }),\n    {},\n  )\n\nexport const useCountriesNormalizedByName = () =>\n  useCountries().reduce<Record<string, string>>(\n    (normalized, country) => ({\n      ...normalized,\n      [country.name]: country.id,\n    }),\n    {},\n  )\n\nexport const useTags = () => useTaxonomy().tags\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  title: {\n    defaultMessage: `{pencils} из {countries}`,\n    id: 'Filter.title',\n  },\n\n  current: {\n    defaultMessage: `{country}: {pencils}`,\n    id: 'Filter.current',\n  },\n})\n","import React, { FC, useEffect, useState } from 'react'\nimport { GlobeProps } from './Globe.interface'\n\nconst Globe: FC<GlobeProps> = ({ animated }) => {\n  const isAnimated = Boolean(animated)\n  const frames = ['🌍', '🌏', '🌎']\n  const speed = 400\n  const [index, setIndex] = useState(0)\n  useEffect(() => {\n    if (isAnimated) {\n      const spin = setTimeout(() => {\n        const nextIndex = index + 1 === frames.length ? 0 : index + 1\n        setIndex(nextIndex)\n      }, speed)\n      return () => {\n        clearTimeout(spin)\n      }\n    }\n  }, [isAnimated, speed, index, setIndex, frames])\n\n  return <>{frames[index]}</>\n}\n\nexport default Globe\n","import { Location } from 'history'\nimport React, { ChangeEvent, SFC, useEffect, useRef } from 'react'\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { appMessages } from '../App/App.messages'\nimport { useCached } from '../Pencil/Pancil.hooks'\nimport { useTaxonomy } from '../Taxonomy/Taxonomy.hooks'\nimport { useFilter } from './Filter.hooks'\nimport { FilterProps } from './Filter.interface'\nimport messages from './Filter.messages'\nimport { mapFilterToQueryString, mapQueryStringToFilter } from './Filter.utils'\nimport Globe from './Globe'\n\nconst Filter: SFC<FilterProps & RouteComponentProps & InjectedIntlProps> = ({ history, intl }) => {\n  const { countries, pencilCount } = useTaxonomy()\n  const [filter, setFilter] = useFilter()\n  const cached = useCached()\n  const isCountryFiltered = Boolean(filter.country)\n  const select = useRef<HTMLSelectElement>(null)\n\n  useEffect(() => {\n    if (mapFilterToQueryString(filter) !== window.location.search) {\n      history.push(mapFilterToQueryString(filter))\n    }\n  }, [filter, history])\n\n  useEffect(() => {\n    const unlisten = history.listen(({ search }: Location, action) => {\n      if (action === 'POP') {\n        setFilter(mapQueryStringToFilter(search))\n      }\n    })\n    return unlisten\n  }, [filter, history, setFilter])\n\n  return (\n    <div className=\"Filter\">\n      <div className=\"Filter-control\">\n        <button\n          className=\"Filter-clear-button\"\n          onClick={() => {\n            if (isCountryFiltered) {\n              setFilter({ country: '' })\n            }\n            if (select.current) {\n              select.current.focus()\n            }\n          }}\n        >\n          <span className=\"Filter-Globe\">\n            <Globe animated={isCountryFiltered} />\n          </span>\n          <FormattedMessage\n            {...messages.title}\n            values={{\n              pencils: (\n                <span className=\"Filter-span\">\n                  <FormattedMessage {...appMessages.pencil} values={{ count: pencilCount }} />\n                </span>\n              ),\n              countries: (\n                <span className=\"Filter-span\">\n                  <FormattedMessage\n                    {...appMessages.country}\n                    values={{ count: countries.length + 1 }}\n                  />\n                </span>\n              ),\n            }}\n          />\n        </button>\n      </div>\n      <div className=\"Filter-control\">\n        <select\n          ref={select}\n          className=\"Filter-select\"\n          value={filter.country}\n          onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n            setFilter({ country: e.target.value, tag: '' })\n          }\n        >\n          <option key=\"empty-country\" value=\"\">\n            Все страны\n          </option>\n          {countries.map(country => {\n            const isCurrent = filter.country === country.name\n            return (\n              <option key={country.name} value={country.name}>\n                {country.flag}{' '}\n                {isCurrent && cached\n                  ? intl.formatMessage(messages.current, {\n                      country: country.name,\n                      pencils: intl.formatMessage(appMessages.pencil, {\n                        count: cached.pages.pencils,\n                      }),\n                    })\n                  : country.name}\n              </option>\n            )\n          })}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default injectIntl(withRouter(Filter))\n","import React from 'react'\nimport Globe from '../Filter/Globe'\n\nconst Loader = () => (\n  <div className=\"Loader\">\n    <Globe animated />\n  </div>\n)\n\nexport default Loader\n","import { ActionType, createAsyncAction, createReducer } from 'typesafe-actions'\nimport { getRequestStatus } from '../../modules/requestStatus'\nimport {\n  PencilAppStore,\n  PencilListResponse,\n  PencilSingleRequest,\n  PencilSingleResponse,\n  PencilsListRequest,\n} from './Pencil.interface'\nimport { getCacheAndNormilizedFromList } from './Pencil.utils'\n\nconst initialState: PencilAppStore = {\n  requestStatus: getRequestStatus().idle,\n  cache: {},\n  normalized: {},\n}\n\nexport const requestSinglePencil = createAsyncAction(\n  'pencil-single:pending',\n  'pencil-single:fulfilled',\n  'pencil-single:rejected',\n)<PencilSingleRequest, PencilSingleResponse, undefined>()\n\nexport const requestPencilList = createAsyncAction(\n  'pencil-list:pending',\n  'pencil-list:fulfilled',\n  'pencil-list:rejected',\n)<PencilsListRequest, PencilListResponse, undefined>()\n\nconst actions = { requestPencils: requestPencilList, requestPencil: requestSinglePencil }\ntype Actions = ActionType<typeof actions>\n\nexport default createReducer<PencilAppStore, Actions>(initialState)\n  .handleAction([requestPencilList.request, requestSinglePencil.request], state => ({\n    ...state,\n    requestStatus: getRequestStatus().pending,\n  }))\n  .handleAction([requestPencilList.failure, requestSinglePencil.failure], state => ({\n    ...state,\n    requestStatus: getRequestStatus().rejected,\n  }))\n  .handleAction(requestPencilList.success, (state, { payload }) => {\n    const { cache, normalized } = getCacheAndNormilizedFromList(payload)\n    return {\n      ...state,\n      cache: { ...state.cache, ...cache },\n      normalized: { ...state.normalized, ...normalized },\n      requestStatus: getRequestStatus().fulfilled,\n    }\n  })\n  .handleAction(requestSinglePencil.success, (state, { payload: pencil }) => ({\n    ...state,\n    normalized: {\n      ...state.normalized,\n      [pencil.id]: pencil,\n    },\n    requestStatus: getRequestStatus().fulfilled,\n  }))\n","export interface RequestStatus {\n  idle: boolean\n  pending: boolean\n  fulfilled: boolean\n  rejected: boolean\n}\n\nexport const getRequestStatus = (): Record<keyof RequestStatus, RequestStatus> => ({\n  idle: {\n    idle: true,\n    pending: false,\n    fulfilled: false,\n    rejected: false,\n  },\n  pending: {\n    idle: false,\n    pending: true,\n    fulfilled: false,\n    rejected: false,\n  },\n  fulfilled: {\n    idle: false,\n    pending: false,\n    fulfilled: true,\n    rejected: false,\n  },\n  rejected: {\n    idle: false,\n    pending: false,\n    fulfilled: false,\n    rejected: true,\n  },\n})\n","import { isUndefined } from 'lodash'\nimport React, { SFC, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useNormalizedPencils, usePecnilRequestStatus, usePencilCache } from './Pancil.hooks'\nimport { requestPencilList, requestSinglePencil } from './Pencil.actions'\nimport { Pencil as PencilInterface, PencilProps, PencilQuery } from './Pencil.interface'\nimport { getPencilsFromCacheByQuery, mapRequestToCacheId } from './Pencil.utils'\n\n// tslint:disable: no-shadowed-variable\nconst Pencil: SFC<PencilProps> = ({ id, query, queries, children }) => {\n  const dispatch = useDispatch()\n  const requestStatus = usePecnilRequestStatus()\n  const cache = usePencilCache()\n  const normalized = useNormalizedPencils()\n  const pencil = id ? normalized[id] : undefined\n  const targetQueries = query ? [query] : queries ? queries : []\n  const pencils = targetQueries.reduce<PencilInterface[]>((acc, query) => {\n    return [...acc, ...getPencilsFromCacheByQuery(query, cache, normalized)]\n  }, [])\n  // console.log(queries, pencils)\n\n  useEffect(() => {\n    const isNotCached = (query: PencilQuery) => isUndefined(cache[mapRequestToCacheId({ query })])\n    if (id && !pencil) {\n      dispatch(requestSinglePencil.request({ id }))\n    } else if (query && isNotCached(query)) {\n      dispatch(requestPencilList.request({ query }))\n    } else if (queries) {\n      queries.filter(isNotCached).forEach(query => {\n        dispatch(requestPencilList.request({ query }))\n      })\n    }\n  }, [dispatch, id, query, queries, pencil, cache])\n\n  return <>{children({ requestStatus, pencil, pencils })} </>\n}\n\nexport default Pencil\n","const apiUrl = process.env.REACT_APP_API_URL\nif (!apiUrl) {\n  throw new Error('no api url')\n}\n\nconst appConfig = {\n  apiUrl,\n}\n\nexport default appConfig\n","import appConfig from '../appConfig'\n\nconst apiRequest = <T>(path: string): Promise<T> => {\n  return fetch(appConfig.apiUrl + path)\n    .then(response => response.json())\n    .catch(error => {\n      console.error('api', path, error)\n      throw error\n    })\n}\n\nexport default apiRequest\n","import apiRequest from '../../modules/api'\nimport {\n  PencilListResponse,\n  PencilSingleRequest,\n  PencilSingleResponse,\n  PencilsListRequest,\n} from './Pencil.interface'\nimport {\n  mapPencilListQueryRequestUrl,\n  mapPencilsingleQueryRequestUrl,\n  mapRequestToCacheId,\n} from './Pencil.utils'\n\nexport const apiRequestSinglePencil = (request: PencilSingleRequest) =>\n  apiRequest<PencilSingleResponse>(mapPencilsingleQueryRequestUrl(request))\n\nexport const apiRequestPencilList = (request: PencilsListRequest) =>\n  apiRequest<PencilListResponse>(mapPencilListQueryRequestUrl(request.query)).then(data => {\n    data.cacheId = mapRequestToCacheId(request)\n    return data\n  })\n","import { uniqBy } from 'lodash'\nimport { ActionsObservable, combineEpics, ofType } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { bufferTime, catchError, filter, map, mergeAll, mergeMap } from 'rxjs/operators'\nimport { ActionType, getType, isActionOf } from 'typesafe-actions'\nimport { requestPencilList, requestSinglePencil } from './Pencil.actions'\nimport { apiRequestPencilList, apiRequestSinglePencil } from './Pencil.api'\nimport { mapRequestToCacheId } from './Pencil.utils'\n\nexport default combineEpics(\n  (\n    action$: ActionsObservable<\n      ActionType<typeof requestSinglePencil.request | typeof requestPencilList.request>\n    >,\n  ) =>\n    action$.pipe(\n      ofType(getType(requestSinglePencil.request), getType(requestPencilList.request)),\n      bufferTime(33),\n      filter(actions => actions.length > 0),\n      mergeMap(actions =>\n        from(\n          uniqBy(actions, ({ payload }) => mapRequestToCacheId(payload)).map(action => {\n            if (isActionOf(requestSinglePencil.request)(action)) {\n              return from(apiRequestSinglePencil(action.payload)).pipe(\n                map(requestSinglePencil.success),\n                catchError(() => of(requestSinglePencil.failure())),\n              )\n            } else if (isActionOf(requestPencilList.request)(action)) {\n              return from(apiRequestPencilList(action.payload)).pipe(\n                map(requestPencilList.success),\n                catchError(() => of(requestPencilList.failure())),\n              )\n            }\n            throw new Error()\n          }),\n        ).pipe(mergeAll()),\n      ),\n    ),\n)\n","import classNames from 'classnames'\nimport React, { SFC } from 'react'\nimport { useFilter } from '../../Filter/Filter.hooks'\nimport { GridProps } from './Grid.interface'\n\nconst Grid: SFC<GridProps> = ({ pencils }) => {\n  const [, setFilter] = useFilter()\n\n  return (\n    <div className=\"Grid\">\n      {pencils.map(pencil => {\n        const thumbSize = pencil.preview\n        const fullSize = pencil.photos[0]\n        const useSize = pencil.grid === 1 ? thumbSize : fullSize\n        return (\n          <a\n            href={`?display=${pencil.id}`}\n            onClick={e => {\n              e.preventDefault()\n              setFilter({ display: pencil.id })\n            }}\n            className={classNames('GridItem', {\n              size2: pencil.grid === 2,\n              size3: pencil.grid === 3,\n            })}\n            key={pencil.id}\n            title={pencil.title}\n          >\n            <img srcSet={`${useSize}, ${fullSize} 2x`} alt={pencil.title} src={useSize} />\n          </a>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Grid\n","import { throttle } from 'lodash'\nimport React, { FC, useEffect, useState } from 'react'\nimport { useFilter } from '../Filter/Filter.hooks'\nimport Loader from '../Loader'\nimport Pencil from '../Pencil'\nimport { useCached } from '../Pencil/Pancil.hooks'\nimport { PencilQuery } from '../Pencil/Pencil.interface'\nimport { getNextPageNumberFromPages } from '../Pencil/Pencil.utils'\nimport { requestFirstPage } from './Gallery.utils'\nimport Grid from './Grid'\n\nconst Gallery: FC = () => {\n  const [filter] = useFilter()\n  const [queries, setQueries] = useState<PencilQuery[]>([])\n  const lastQuery = queries[queries.length - 1]\n  const cached = useCached(lastQuery)\n  const nextPageNumber = cached ? getNextPageNumberFromPages(cached.pages) : null\n  const { country, tag, page } = filter\n\n  useEffect(() => {\n    setQueries([requestFirstPage({ country, tag, page })])\n  }, [country, tag, page])\n  useEffect(() => {\n    const loadNextPage = (nextpage: number) => {\n      setQueries([...queries, { page: nextpage, ...filter }])\n    }\n    const onScroll = throttle(() => {\n      if (nextPageNumber) {\n        const scrollBottomLine = window.pageYOffset + window.innerHeight\n        const total = document.body.clientHeight\n        if (total * 0.6 < scrollBottomLine) {\n          loadNextPage(nextPageNumber)\n        }\n      }\n    }, 500)\n    if (nextPageNumber) {\n      window.addEventListener('scroll', onScroll)\n    }\n    return () => {\n      window.removeEventListener('scroll', onScroll)\n    }\n  }, [queries, nextPageNumber, filter])\n\n  return (\n    <Pencil queries={queries}>\n      {({ pencils }) => (\n        <>\n          <Grid pencils={pencils} />\n\n          {nextPageNumber ? (\n            <div className=\"Gallery-loading\">\n              <Loader />\n            </div>\n          ) : null}\n        </>\n      )}\n    </Pencil>\n  )\n}\n\nexport default Gallery\n","import { GeographyProps } from 'react-simple-maps'\nimport { MapGeoStyleProps } from './Map.interface'\n\nconst baseStyle: React.CSSProperties = {\n  stroke: '#607D8B',\n  strokeWidth: 0.75,\n  outline: 'none',\n}\n\nconst lightGrey = '#eceff1'\nconst grey = '#cfd8dc'\nconst blue = '#309cd0'\nconst darkBlue = '#226a8c'\nconst red = '#ff5722'\n\nexport const mapGeoIdToStyle = ({\n  hasPencil,\n  isSelected,\n}: MapGeoStyleProps): GeographyProps['style'] => ({\n  default: {\n    fill: isSelected ? red : hasPencil ? blue : lightGrey,\n    ...baseStyle,\n  },\n  hover: {\n    fill: isSelected ? red : hasPencil ? darkBlue : grey,\n    cursor: hasPencil ? 'pointer' : 'default',\n    ...baseStyle,\n  },\n  pressed: { fill: isSelected ? red : hasPencil ? darkBlue : grey, ...baseStyle },\n})\n","import React from 'react'\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps'\nimport { useFilter } from '../Filter/Filter.hooks'\nimport {\n  useCountries,\n  useCountriesNormalizedByGeoId,\n  useCountriesNormalizedByName,\n} from '../Taxonomy/Taxonomy.hooks'\nimport { mapGeoIdToStyle } from './Map.utils'\nimport geography from './world.json'\n\nconst Map = () => {\n  const [filter, setFilter] = useFilter()\n  const countries = useCountries()\n  const geoIds = countries.map(({ id }) => id)\n\n  const normalizedIds = useCountriesNormalizedByGeoId()\n  const normalizedNames = useCountriesNormalizedByName()\n\n  const onCountryClick = (geoId: string) => () => {\n    setFilter({ country: normalizedIds[geoId] })\n  }\n\n  return (\n    <div className=\"Map\">\n      <ComposableMap\n        className=\"Map-block\"\n        height={400}\n        projectionConfig={{\n          yOffset: 50,\n        }}\n      >\n        <Geographies geography={geography} disableOptimization>\n          {(geographies, projection) => {\n            return geographies.map((geo, index) => {\n              // TODO issue types\n              const geoId = (geo as any).id\n              const hasPencil = geoIds.includes(geoId)\n              const isSelected = normalizedNames[filter.country] === geoId\n              return (\n                <Geography\n                  key={index}\n                  geography={geo}\n                  projection={projection}\n                  onClick={hasPencil ? onCountryClick(geoId) : undefined}\n                  style={mapGeoIdToStyle({ hasPencil, isSelected })}\n                />\n              )\n            })\n          }}\n        </Geographies>\n      </ComposableMap>\n    </div>\n  )\n}\n\nexport default Map\n","import React, { SFC, useCallback } from 'react'\nimport { useFilter } from '../../Filter/Filter.hooks'\nimport { getEmptyFilter } from '../../Filter/Filter.utils'\nimport { InfoProps } from './Info.interface'\nimport { getFilterFromLink } from './Info.utils'\n\nconst Info: SFC<InfoProps> = ({ pencil }) => {\n  const [, setFilter] = useFilter()\n\n  const handlePseudoLink = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      e.stopPropagation()\n      const targetElement = e.target as HTMLElement\n\n      if (targetElement.tagName === 'A') {\n        const link = targetElement.getAttribute('href')\n        if (link) {\n          const filterFromLink = getFilterFromLink(link)\n          if (filterFromLink) {\n            e.preventDefault()\n            setFilter({ ...getEmptyFilter(), ...filterFromLink })\n          }\n        }\n      }\n    },\n    [setFilter],\n  )\n\n  return (\n    <div className=\"Info\">\n      <h1>{pencil.title}</h1>\n      <h2>\n        {pencil.country.name}, {pencil.city}\n      </h2>\n\n      <article\n        className=\"Pencil-content\"\n        dangerouslySetInnerHTML={{ __html: pencil.content }}\n        onClick={handlePseudoLink}\n      />\n      <p>\n        {pencil.photos.map(src => (\n          <img key={src} className=\"Info-photo\" alt={pencil.title} src={src} />\n        ))}\n      </p>\n\n      <hr />\n      <p className=\"Info-tags\">\n        {pencil.tags.map((tag, index) => {\n          return (\n            <span key={`${index}/${tag}`}>\n              <a\n                className=\"Info-tag\"\n                href={`?tag=${tag}`}\n                onClick={e => {\n                  e.preventDefault()\n                  setFilter({ ...getEmptyFilter(), tag })\n                }}\n              >\n                #{tag}\n              </a>{' '}\n            </span>\n          )\n        })}\n      </p>\n    </div>\n  )\n}\n\nexport default Info\n","import { isEmpty, pick } from 'lodash'\nimport qs from 'qs'\nimport { Filter } from './../../Filter/Filter.interface'\nimport { getEmptyFilter } from './../../Filter/Filter.utils'\n\nexport const getFilterFromLink = (link: string): Filter | null => {\n  const queryPart = link.split('?')[1]\n  if (queryPart) {\n    const emptyFilter = getEmptyFilter()\n    const query = qs.parse(queryPart)\n    const filterKeys = Object.keys(emptyFilter) as Array<keyof Filter>\n    const keysFromQuery = pick<Filter, keyof Filter>(query, filterKeys)\n    if (!isEmpty(keysFromQuery)) {\n      return keysFromQuery\n    }\n  }\n\n  return null\n}\n","import React, { SFC } from 'react'\nimport { useFilter } from '../Filter/Filter.hooks'\nimport Pencil from '../Pencil'\nimport Info from './Info'\nimport { PencilInfoProps } from './PencilInfo.interface'\n\nconst PencilInfo: SFC<PencilInfoProps> = () => {\n  const [filter, setFilter] = useFilter()\n  const closePencilInfo = () => setFilter({ display: '' })\n\n  if (filter.display) {\n    return (\n      <Pencil id={filter.display}>\n        {({ pencil }) => {\n          if (pencil) {\n            return (\n              <>\n                <div className=\"PencilInfo-backdrop\" onClick={closePencilInfo} />\n                <Info pencil={pencil} />\n                <button onClick={closePencilInfo} className=\"PencilInfo-close\">\n                  ⓧ\n                </button>\n              </>\n            )\n          }\n          return null\n        }}\n      </Pencil>\n    )\n  }\n  return null\n}\n\nexport default PencilInfo\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  title: {\n    defaultMessage: '{pencils} в категории \"{tag}\"',\n    id: 'TagHeader.title',\n  },\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { appMessages } from '../../App/App.messages'\nimport { useFilter } from '../../Filter/Filter.hooks'\nimport { useCached } from '../../Pencil/Pancil.hooks'\nimport messages from './TagHeader.messages'\n\nconst TagHeader = () => {\n  const [filter, setFilter] = useFilter()\n  const cache = useCached()\n  return (\n    <button onClick={() => setFilter({ tag: '' })} className=\"TagHeader-drop\">\n      {cache ? (\n        <FormattedMessage\n          tagName=\"h3\"\n          {...messages.title}\n          values={{\n            tag: filter.tag,\n            pencils: (\n              <FormattedMessage {...appMessages.pencil} values={{ count: cache.pages.pencils }} />\n            ),\n          }}\n        />\n      ) : (\n        'x'\n      )}\n    </button>\n  )\n}\n\nexport default TagHeader\n","import { ActionType, createAsyncAction, createReducer } from 'typesafe-actions'\nimport { getRequestStatus } from '../../modules/requestStatus'\nimport { TaxonomyAppStore as StoreTaxonomy, TaxonomyResponse } from './Taxonomy.interface'\n\nexport const requestTaxonomy = createAsyncAction(\n  'taxonomy:pending',\n  'taxonomy:fulfilled',\n  'taxonomy:rejected',\n)<undefined, TaxonomyResponse, undefined>()\n\nconst initialState: StoreTaxonomy = {\n  requestStatus: getRequestStatus().idle,\n  pencilCount: 0,\n\n  countries: [],\n  tags: [],\n}\n\nconst actions = { requestTaxonomy }\ntype Actions = ActionType<typeof actions>\n\nexport default createReducer<StoreTaxonomy, Actions>(initialState)\n  .handleAction(requestTaxonomy.request, state => ({\n    ...state,\n    requestStatus: getRequestStatus().pending,\n  }))\n  .handleAction(requestTaxonomy.success, (state, { payload }) => ({\n    countries: payload.taxonomy.countries,\n    requestStatus: getRequestStatus().fulfilled,\n    tags: payload.taxonomy.tags,\n    pencilCount: payload.meta.pencils,\n  }))\n  .handleAction(requestTaxonomy.failure, state => ({\n    ...state,\n    requestStatus: getRequestStatus().rejected,\n  }))\n","import React, { SFC, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { requestTaxonomy } from './Taxonomy.actions'\nimport { useTaxonomyRequestStatus } from './Taxonomy.hooks'\nimport { TaxonomyProps } from './Taxonomy.interface'\n\nconst Taxonomy: SFC<TaxonomyProps> = ({ children }) => {\n  const dispatch = useDispatch()\n  const requestStatus = useTaxonomyRequestStatus()\n\n  useEffect(() => {\n    dispatch(requestTaxonomy.request())\n  }, [dispatch])\n\n  return <>{children({ requestStatus })}</>\n}\n\nexport default Taxonomy\n","import { ActionsObservable, combineEpics, ofType } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { catchError, map, mergeMap } from 'rxjs/operators'\nimport { ActionType, getType } from 'typesafe-actions'\nimport { requestTaxonomy } from './Taxonomy.actions'\nimport { apiRequestTaxonomy } from './Taxonomy.api'\n\nexport default combineEpics(\n  (action$: ActionsObservable<ActionType<typeof requestTaxonomy.request>>) =>\n    action$.pipe(\n      ofType(getType(requestTaxonomy.request)),\n      mergeMap(() =>\n        from(apiRequestTaxonomy()).pipe(\n          map(requestTaxonomy.success),\n          catchError(() => of(requestTaxonomy.failure())),\n        ),\n      ),\n    ),\n)\n","import apiRequest from '../../modules/api'\nimport { TaxonomyResponse } from './Taxonomy.interface'\n\nexport const apiRequestTaxonomy = () => apiRequest<TaxonomyResponse>('/taxonomy/')\n","import React, { Fragment } from 'react'\nimport { addLocaleData, IntlProvider } from 'react-intl'\nimport ru from 'react-intl/locale-data/ru'\nimport { BrowserRouter } from 'react-router-dom'\nimport Filter from '../Filter'\nimport { useFilter } from '../Filter/Filter.hooks'\nimport Gallery from '../Gallery'\nimport Loader from '../Loader'\nimport Map from '../Map'\nimport PencilInfo from '../PencilInfo'\nimport TagHeader from '../PencilInfo/TagHeader'\nimport Taxonomy from '../Taxonomy'\n\naddLocaleData(ru)\n\nconst App: React.FC = () => {\n  const [filter] = useFilter()\n  return (\n    <Taxonomy>\n      {({ requestStatus: { pending, fulfilled, rejected } }) => {\n        if (rejected) {\n          return (\n            <div className=\"App-loading\">\n              <button onClick={() => window.location.reload()}>не могу загрузить</button>\n            </div>\n          )\n        }\n        return pending ? (\n          <div className=\"App-loading\">\n            <Loader />\n          </div>\n        ) : fulfilled ? (\n          <div className=\"App\">\n            <IntlProvider locale=\"ru\" defaultLocale=\"ru\" textComponent={Fragment}>\n              <BrowserRouter>\n                <PencilInfo />\n                <section className=\"App-block\">\n                  <Filter />\n                </section>\n\n                <section className=\"App-block\">{filter.tag ? <TagHeader /> : <Map />}</section>\n\n                <section className=\"App-block\">\n                  <Gallery />\n                </section>\n              </BrowserRouter>\n            </IntlProvider>\n          </div>\n        ) : null\n      }}\n    </Taxonomy>\n  )\n}\n\nexport default App\n","import { combineEpics } from 'redux-observable'\nimport { pencilEpic } from './components/Pencil'\nimport { taxonomyEpic } from './components/Taxonomy'\n\nconst rootEpic = combineEpics(taxonomyEpic, pencilEpic)\n\nexport default rootEpic\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { filterReducer } from './components/Filter'\nimport { pencilReducer } from './components/Pencil'\nimport { taxonomyReducer } from './components/Taxonomy'\nimport rootEpic from './epics'\n\nconst epicMiddleware = createEpicMiddleware()\nconst rootReducer = combineReducers({\n  taxonomy: taxonomyReducer,\n  pencils: pencilReducer,\n  filter: filterReducer,\n})\nconst store: Store<AppStore> = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(epicMiddleware)),\n)\nepicMiddleware.run(rootEpic)\n\nexport type AppStore = ReturnType<typeof rootReducer>\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport './index.css'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}